datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model PasswordReset {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  codeVerified   Boolean   @default(false)
  reset          Boolean   @default(false)
  createdAt      DateTime  @default(now())
  userId         String    @db.ObjectId
  resetAt        DateTime?
  ip             String
  codeVerifiedAt DateTime?
  code           String
  attempt        Int
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  active       Boolean  @default(true)
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime  @default(now())
  email        String    @unique
  sessions     Session[]
  passwordHash String
  pseudo       String
}

model Etutiant {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  hasPaid   Boolean @default(false)
  matricule String  @unique @default(uuid())
  email     String  @unique
  firstName String
  lastName  String
  class     String
  pass      Pass?
}

model Pass {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  etutiant   Etutiant @relation(fields: [etudiantId], references: [id])
  etudiantId String   @unique @db.ObjectId
  aCheck     Boolean  @default(false)
  dCheck     Boolean  @default(false)
  createdAt  DateTime @default(now())
  qrValue    String   @unique
}
